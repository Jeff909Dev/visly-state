(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{76:function(e,t,a){"use strict";a.r(t);var n=a(0),s=a.n(n),r=a(87),c=a(92),o=a(77),i=a.n(o),l=a(425),u=a(390),m=[{title:"Synchronise data",summary:"Share data between multiple clients using websockets. \n      As soon as a change is made on one client it is shared with all other \n      clients instantly and efficiently.",code:"\n      import { syncedState, useValue } from '@visly/state' \n\n      const appState = syncedState({ cursors: [] }) \n\n      function Cursors() { \n        const cursors = useValue(appState, s => s.cursors) \n        return cursors.map(c => ( \n          <Cursor location={c.location} color={c.color} /> \n        )) \n      }\n    "},{title:"Share logic",summary:"Share data between multiple clients using websockets. \n      As soon as a change is made on one client it is shared with all other \n      clients instantly and efficiently.",code:"\n      import { syncedState, useValue } from '@visly/state' \n\n      const appState = syncedState({ cursors: [] }) \n\n      function Cursors() { \n        const cursors = useValue(appState, s => s.cursors) \n        return cursors.map(c => ( \n          <Cursor location={c.location} color={c.color} /> \n        )) \n      }\n    "},{title:"Time travel",summary:"Share data between multiple clients using websockets. \n      As soon as a change is made on one client it is shared with all other \n      clients instantly and efficiently.",code:"\n      import { syncedState, useValue } from '@visly/state' \n\n      const appState = syncedState({ cursors: [] }) \n\n      function Cursors() { \n        const cursors = useValue(appState, s => s.cursors) \n        return cursors.map(c => ( \n          <Cursor location={c.location} color={c.color} /> \n        )) \n      }\n    "},{title:"Improve performance",summary:"Share data between multiple clients using websockets. \n      As soon as a change is made on one client it is shared with all other \n      clients instantly and efficiently.",code:"\n      import { syncedState, useValue } from '@visly/state' \n\n      const appState = syncedState({ cursors: [] }) \n\n      function Cursors() { \n        const cursors = useValue(appState, s => s.cursors) \n        return cursors.map(c => ( \n          <Cursor location={c.location} color={c.color} /> \n        )) \n      }\n    "}];function d(e){var t=e.title,a=e.summary,n=e.code;return s.a.createElement("div",{className:"feature"},s.a.createElement("div",{className:"feature-summary"},s.a.createElement("h1",{className:"feature-summary-h1"},t),s.a.createElement("p",{className:"feature-summary-p"},a)),s.a.createElement(p,{code:n}))}function p(e){var t=e.code;return s.a.createElement("div",{className:"code-container"},s.a.createElement("div",{className:"code",padding:["bottom"]},s.a.createElement(l.a,{language:"jsx",style:u.tomorrow,customStyle:{borderRadius:8,padding:10,marginLeft:-20,marginRight:-20}},t)))}t.default=function(){return s.a.createElement(c.a,{title:"Visly State"},s.a.createElement("header",{className:Object(r.a)("hero hero--primary",i.a.heroBanner)},s.a.createElement("div",{className:"hero-container"},s.a.createElement("title",null,"React state for real time apps".toUpperCase()),s.a.createElement("p",null,"A React state management library that extends to your server."),s.a.createElement("a",{class:"github-link",href:"https://github.com/vislyhq/visly-state"},"View on Github"))),s.a.createElement("div",{className:"triangle-right"}),s.a.createElement("section",{className:"main-container"},m.map((function(e){return s.a.createElement(d,{title:e.title,summary:e.summary,code:e.code})}))))}}}]);