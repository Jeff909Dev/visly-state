(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{68:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),a=n(6),o=(n(0),n(72)),s={title:"Testing",sidebar_label:"Testing"},i={unversionedId:"testing",id:"testing",isDocsHomePage:!1,title:"Testing",description:"Becuase Visly State for the most part just deals with plain old JavaScript functions they are really easy to test with any testing library out there. We'll be using Jest for these examples though.",source:"@site/docs/testing.md",slug:"/testing",permalink:"/docs/testing",editUrl:"https://github.com/vislyhq/visly-state/edit/master/website/docs/testing.md",version:"current",sidebar_label:"Testing",sidebar:"docs",previous:{title:"Transactions & history",permalink:"/docs/transactions"},next:{title:"Syncing state",permalink:"/docs/syncing"}},c=[],l={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Becuase Visly State for the most part just deals with plain old JavaScript functions they are really easy to test with any testing library out there. We'll be using Jest for these examples though."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import { appState, selectors, mutations } from './state'\n\ntest('mySelector works as expected', () => {\n    const data = appState.get(selectors.mySelector)\n    expect(data).toEqual(2)\n})\n\ntest('myMutation works as expected', () => {\n    appState.set(mutations.myMutation)\n    expect(appState.get()).toEqual({ count: 1})\n})\n")),Object(o.b)("p",null,"While this works well for small examples like this, it is often necesarry to set up a more complex state before testing selectors and mutations. The simplest way to do this is by calling ",Object(o.b)("inlineCode",{parentName:"p"},".set()")," on your store before you run your test and then then reset your application state before each test is run."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import { appState, selectors, mutations } from './state'\n\nbeforeEach(() => {\n  appState.resetForTesting();\n});\n\ntest('mySelector works as expected', () => {\n    const data = appState.get(selectors.mySelector)\n    expect(data).toEqual(2)\n})\n\ntest('myMutation works as expected', () => {\n    appState.set(mutations.myMutation)\n    expect(appState.get()).toEqual({ count: 1})\n})\n")),Object(o.b)("p",null,"Another way to test mutations specifically is to use the ",Object(o.b)("inlineCode",{parentName:"p"},"partialMutation")," helper function. This enables you to call your mutation with a partial state instead of needing to set up your whole application state. This can be useful when your application state is very complex."),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-tsx"}),"import { partialMutation, mutations } from './state'\n\ntest('myMutation works as expected', () => {\n    const increment = partialMutation(mutations.increment)\n    const newState = increment({count: 1})\n    expect(newState).toEqual({ count: 2})\n})\n")))}p.isMDXComponent=!0},72:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},y=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(n),y=r,b=u["".concat(s,".").concat(y)]||u[y]||m[y]||o;return n?a.a.createElement(b,i(i({ref:t},l),{},{components:n})):a.a.createElement(b,i({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}y.displayName="MDXCreateElement"}}]);